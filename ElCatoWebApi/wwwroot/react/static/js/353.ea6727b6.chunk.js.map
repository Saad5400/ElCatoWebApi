{"version":3,"file":"static/js/353.ea6727b6.chunk.js","mappings":"2MAAe,SAASA,EAAUC,GAE9B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6FAA4FC,SACtGH,EAAMG,UAGnB,CCFA,SAASC,EAAOJ,GACZ,OACIK,EAAAA,EAAAA,MAAA,OAAKH,UAAW,sBAAwBF,EAAME,UAAUC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,cAAcJ,UAAU,qCAAoCC,UACvEF,EAAAA,EAAAA,KAAA,OAAKM,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYP,UAAU,sCAAqCC,UAACF,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,mCAGrMZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACnBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oCAAmCC,SAAC,qBAErDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,2BAA0BC,UACxCF,EAAAA,EAAAA,KAAA,OAAKM,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYP,UAAU,sCAAqCC,UAACF,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,qIAKjN,CAEA,SAASC,EAAWd,GAEhB,IAAAe,EAAgCC,EAAAA,UAAe,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAEtBI,GAAWC,EAAAA,EAAAA,MAYjB,OAVAN,EAAAA,WAAgB,WACZI,EAAYC,EAASE,WAAavB,EAAMwB,GAC5C,GAAG,CAACH,EAASE,gBAEUE,GAAnBzB,EAAM0B,aAEN1B,EAAQ2B,KAAKC,MAAMD,KAAKE,UAAU7B,KAC5B0B,WAAY,GAGf1B,EAAM0B,WACRzB,EAAAA,EAAAA,KAAA,MAAAE,UACGF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAI,CAAC5B,UAAWiB,EAAW,cAAWM,EAAWD,GAAIxB,EAAMwB,GAAGrB,SAAEH,EAAMG,aAEzE,IAEV,CAEe,SAAS4B,EAAY/B,GAEhC,IAAQgC,EAAYhB,EAAAA,WAAiBiB,EAAAA,IAA7BD,QAER,OACI3B,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAOiC,GAAG,cAAcC,KAAK,WAAWjC,UAAU,mBAClDG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qEAAoEC,SAAA,EAC/EF,EAAAA,EAAAA,KAACG,EAAM,CAACF,UAAU,eAClBD,EAAAA,EAAAA,KAACF,EAAS,CAAAI,UACNF,EAAAA,EAAAA,KAACmC,EAAAA,GAAM,UAGf/B,EAAAA,EAAAA,MAAA,OAAKH,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,cAAcJ,UAAU,oBACvCG,EAAAA,EAAAA,MAAA,MAAIH,UAAU,qDAAoDC,SAAA,EAE9DF,EAAAA,EAAAA,KAACa,EAAU,CAACU,GAAG,SAAQrB,SAAC,UACxBF,EAAAA,EAAAA,KAACa,EAAU,CAACY,UAAWM,EAASR,GAAG,kBAAiBrB,SAAC,cACrDF,EAAAA,EAAAA,KAACa,EAAU,CAACY,UAAWM,EAASR,GAAG,eAAcrB,SAAC,WAClDF,EAAAA,EAAAA,KAACa,EAAU,CAACY,UAAWM,EAASR,GAAG,eAAcrB,SAAC,kBAMtE,C","sources":["components/Container.js","pages/admin/AdminLayout.js"],"sourcesContent":["export default function Container(props) {\r\n\r\n    return (\r\n        <div className=\"w-full container flex flex-col items-center justify-start min-h-screen pt-2 px-5 flex-none\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import { Link, Outlet, useLocation, useNavigate, useNavigation } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\nimport React from \"react\";\r\nimport Container from \"../../components/Container\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <div className={\"navbar bg-base-100 \" + props.className}>\r\n            <div className=\"flex-none\">\r\n                <label htmlFor=\"main-drawer\" className=\"btn btn-square btn-ghost lg:hidden\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"inline-block w-5 h-5 stroke-current\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path></svg>\r\n                </label>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n                <a className=\"btn btn-ghost normal-case text-xl\">El Cato Admin</a>\r\n            </div>\r\n            <div className=\"flex-none\">\r\n                <button className=\"btn btn-square btn-ghost\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"inline-block w-5 h-5 stroke-current\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\"></path></svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DrawerLink(props) {\r\n\r\n    const [isActive, setIsActive] = React.useState(false);\r\n\r\n    const location = useLocation();\r\n\r\n    React.useEffect(() => {\r\n        setIsActive(location.pathname === props.to);\r\n    }, [location.pathname]);\r\n\r\n    if (props.isAllowed == undefined) {\r\n        // add isAllowed to the props object\r\n        props = JSON.parse(JSON.stringify(props));\r\n        props.isAllowed = true;\r\n    }\r\n\r\n    return props.isAllowed ?\r\n        (<li>\r\n            <Link className={isActive ? \"active\" : undefined} to={props.to}>{props.children}</Link>\r\n        </li>)\r\n        : null;\r\n\r\n}\r\n\r\nexport default function AdminLayout(props) {\r\n\r\n    const { isAdmin } = React.useContext(UserContext);\r\n\r\n    return (\r\n        <div className=\"drawer lg:drawer-open\">\r\n            <input id=\"main-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n            <div className=\"drawer-content flex flex-col items-start justify-start bg-base-200\">\r\n                <Navbar className=\"lg:hidden\" />\r\n                <Container>\r\n                    <Outlet />\r\n                </Container>\r\n            </div>\r\n            <div className=\"drawer-side\">\r\n                <label htmlFor=\"main-drawer\" className=\"drawer-overlay\"></label>\r\n                <ul className=\"menu p-4 w-80 h-full bg-base-100 text-base-content\">\r\n                    {/* Sidebar content here */}\r\n                    <DrawerLink to=\"/admin\">Home</DrawerLink>\r\n                    <DrawerLink isAllowed={isAdmin} to=\"/admin/sections\">Sections</DrawerLink>\r\n                    <DrawerLink isAllowed={isAdmin} to=\"/admin/cards\">Cards</DrawerLink>\r\n                    <DrawerLink isAllowed={isAdmin} to=\"/admin/pages\">Pages</DrawerLink>\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":["Container","props","_jsx","className","children","Navbar","_jsxs","htmlFor","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","DrawerLink","_React$useState","React","_React$useState2","_slicedToArray","isActive","setIsActive","location","useLocation","pathname","to","undefined","isAllowed","JSON","parse","stringify","Link","AdminLayout","isAdmin","UserContext","id","type","Outlet"],"sourceRoot":""}