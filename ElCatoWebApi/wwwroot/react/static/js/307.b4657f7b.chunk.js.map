{"version":3,"file":"static/js/307.b4657f7b.chunk.js","mappings":"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","sources":["components/MyDataTable.js","components/AdminTable.js","components/Alert.js","components/FormControl.js","pages/admin/CardsTable.js"],"sourcesContent":["import React from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nfunction FilterComponent({ filterText, onFilter, onClear }) {\r\n    return (\r\n        <>\r\n            <div className=\"join w-full\">\r\n                <div className='w-full'>\r\n                    <div className='w-full'>\r\n                        <input className=\"input input-bordered join-item w-full\" placeholder=\"Search\"\r\n                            id=\"search\" type=\"text\" value={filterText} onChange={onFilter}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-error join-item\" onClick={onClear}>X</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function MyDataTable(props) {\r\n    {\r\n        const [filterText, setFilterText] = React.useState('');\r\n        const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n        const filteredItems = props.data?.filter(item => {\r\n            return props.columns.some(\r\n                c => {\r\n                    const val = typeof c.selector === 'function' ? c.selector(item) : item[c.selector];\r\n                    return val ? val.toString().toLowerCase().includes(filterText.toLowerCase()) : '';\r\n                }\r\n            );\r\n        });\r\n\r\n\r\n        const subHeaderComponentMemo = React.useMemo(() => {\r\n            const handleClear = () => {\r\n                if (filterText) {\r\n                    setResetPaginationToggle(!resetPaginationToggle);\r\n                    setFilterText('');\r\n                }\r\n            };\r\n\r\n            return (\r\n                <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />\r\n            );\r\n        }, [filterText, resetPaginationToggle]);\r\n\r\n        return (\r\n            <DataTable\r\n                title={props.title}\r\n                columns={props.columns}\r\n                data={filteredItems}\r\n                pagination\r\n                paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n                subHeader\r\n                subHeaderComponent={subHeaderComponentMemo}\r\n                persistTableHead\r\n                theme='dark'\r\n                onColumnOrderChange={cols => console.log(cols)}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { api } from \"../App\";\r\nimport Alert from \"./Alert\";\r\nimport { UserContext } from \"../App\";\r\nimport MyDataTable from \"./MyDataTable\";\r\nimport FingerprintJS from '@fingerprintjs/fingerprintjs';\r\n\r\nexport default function AdminTable(props) {\r\n\r\n    const { model, setModel, models, setModels, sort, defaultModel } = props;\r\n\r\n    const userContext = React.useContext(UserContext);\r\n    const [error, setError] = React.useState(null);\r\n    const [success, setSuccess] = React.useState(null);\r\n\r\n    const CREATE = \"Create\",\r\n        EDIT = \"Edit\";\r\n    const [state, setState] = React.useState(CREATE); // Create, Edit\r\n\r\n    React.useEffect(() => {\r\n        if (userContext.isAdmin) {\r\n            api.get(props.apiPath).then(res => {\r\n                let data = res.data;\r\n                sort(data);\r\n                setModels(data);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n        else {\r\n            const setFp = async () => {\r\n                const fp = await FingerprintJS.load();\r\n                const { visitorId } = await fp.get();\r\n                api.get(props.apiPath, {\r\n                    params: {\r\n                        fingerPrint: visitorId\r\n                    }\r\n                }).then(res => {\r\n                    let data = res.data;\r\n                    sort(data);\r\n                    setModels(data);\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n            };\r\n            setFp();\r\n        }\r\n    }, []);\r\n\r\n    function reset(e) {\r\n        e.preventDefault();\r\n        setError(null);\r\n        setSuccess(null);\r\n        // setState(CREATE);\r\n        setModel(defaultModel);\r\n        document.querySelector(\"form[id=mainForm]\").reset();\r\n        document.querySelectorAll(\"button\").forEach(b => b.disabled = false);\r\n        props.reset && props.reset(e);\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        if (!window.confirm(\"Are you sure you want to delete this item?\")) {\r\n            return;\r\n        }\r\n        reset(e);\r\n        const id = e.target.value;\r\n        api.delete(`${props.apiPath}/${id}`).then(res => {\r\n            if (res.status.toString().startsWith(\"2\")) {\r\n                setModels(models.filter(m => m.id != id));\r\n                setSuccess(\"Item deleted successfully\");\r\n            }\r\n            else {\r\n                setError(JSON.stringify(res));\r\n            }\r\n        }).catch(err => {\r\n            setError(JSON.stringify(err.message));\r\n        });\r\n        props.handleDelete && props.handleDelete(e);\r\n    }\r\n\r\n    function handleEdit(e) {\r\n        reset(e);\r\n        e.target.disabled = true;\r\n        setState(EDIT);\r\n        const id = e.target.value;\r\n        const model = models.find(s => s.id == id);\r\n        setModel(model);\r\n    }\r\n\r\n    function handleCreate(e) {\r\n        reset(e);\r\n        setState(CREATE);\r\n        props.handleCreate && props.handleCreate(e);\r\n    }\r\n\r\n    function submit(e) {\r\n        document.querySelector(\"button[id=submit]\").disabled = true;\r\n        api.post(`${props.apiPath}/upsert`, model)\r\n            .then(res => {\r\n                if (res.status.toString().startsWith(\"2\")) {\r\n                    setModel(res.data);\r\n                    let data;\r\n                    if (state === CREATE) {\r\n                        data = [...models, res.data];\r\n                    } else {\r\n                        data = models.map(s => s.id == res.data.id ? res.data : s);\r\n                    }\r\n                    sort(data);\r\n                    setModels(data);\r\n                    reset(e);\r\n                    setSuccess(\"model saved successfully\");\r\n                }\r\n                else {\r\n                    setError(JSON.stringify(res));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setError(JSON.stringify(err.message));\r\n            })\r\n            .finally(() => {\r\n                document.querySelector(\"button[id=submit]\").disabled = false;\r\n            });\r\n    }\r\n\r\n    let columns = props.cols;\r\n    if (userContext.isAdmin) {\r\n        columns = [...props.cols, {\r\n            name: \"Actions\",\r\n            cell: row => <div className=\"flex justify-between\">\r\n                <button className=\"btn btn-primary\" value={row.id} onClick={handleEdit}>Edit</button>\r\n                <button className=\"btn btn-danger\" value={row.id} onClick={handleDelete}>Delete</button>\r\n            </div>\r\n        }];\r\n    }\r\n\r\n    return (<div className=\"w-full max-w-md sm:max-w-none h-full tajawal lg:mt-5\">\r\n        <form id=\"mainForm\">\r\n            <h1 className=\"flex justify-between\">\r\n                <span className=\"text-2xl\">\r\n                    {state} {model ? model.title : props.title}\r\n                </span>\r\n                <button className=\"btn btn-primary\" onClick={handleCreate}>\r\n                    New\r\n                </button>\r\n            </h1>\r\n            {props.children}\r\n            <div className=\"mt-5\">\r\n                <button id=\"submit\" className=\"btn btn-primary btn-block\" onClick={submit}>{state}</button>\r\n                {error && <Alert className=\"alert-error\">\r\n                    {error}\r\n                </Alert>}\r\n                {success && <Alert className=\"alert-success\">\r\n                    {success}\r\n                </Alert>}\r\n            </div>\r\n        </form>\r\n        <div className=\"mt-10\">\r\n\r\n        </div>\r\n        <h1 className=\"text-2xl\">Your {props.title}</h1>\r\n        <div className=\"overflow-auto w-full\">\r\n            <MyDataTable\r\n                title={props.title}\r\n                data={models}\r\n                columns={columns}\r\n            />\r\n        </div>\r\n        <br />\r\n        <br />\r\n    </div>);\r\n}","export default function Alert(props) {\r\n\treturn (<div className={\"alert flex \" + props.className}>\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"stroke-current shrink-0 w-6 h-6\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\r\n\t\t<span className=\"w-full\">\r\n\t\t\t{props.children}\r\n\t\t</span>\r\n\t</div>)\r\n}","export default function FormControl(props) {\r\n    return (\r\n        <div className={\"form-control w-full \" + props.className}>\r\n            <label className=\"label\">\r\n                <span className=\"label-text\">\r\n                    {props.label}\r\n                </span>\r\n            </label>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport AdminTable from \"../../components/AdminTable\";\r\nimport FormControl from \"../../components/FormControl\";\r\nimport { api } from \"../../App\";\r\n\r\nexport default function CardsTable() {\r\n\r\n    const [card, setCard] = React.useState(null);\r\n    const [cards, setCards] = React.useState(null);\r\n    const [sections, setSections] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        api.get(\"/sections\").then(res => {\r\n            setSections(res.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    function sort(cards) {\r\n        cards.sort((a, b) => {\r\n            if (a.section?.order == b.section?.order) {\r\n                return a.order - b.order;\r\n            }\r\n            return a.section?.order - b.section?.order;\r\n        });\r\n    }\r\n\r\n    return (<AdminTable\r\n        sort={sort}\r\n        model={card}\r\n        setModel={setCard}\r\n        models={cards}\r\n        setModels={setCards}\r\n        title=\"Cards\"\r\n        apiPath=\"/cards\"\r\n        cols={[\r\n            { name: \"ID\", selector: (c) => c.id },\r\n            { name: \"Title\", selector: (c) => c.title },\r\n            { name: \"Order\", selector: (c) => c.order },\r\n            { name: \"Section\", selector: (c) => c.section?.title },\r\n        ]}\r\n    >\r\n        <input type=\"hidden\" name=\"id\" value={card ? card.id : 0} />\r\n        <FormControl label=\"Title\">\r\n            <input name=\"title\" type=\"text\" className=\"input input-bordered\" value={card ? card.title : \"\"} onChange={e => {\r\n                setCard({ ...card, title: e.target.value });\r\n            }} />\r\n        </FormControl>\r\n        <FormControl label=\"Order\">\r\n            <input name=\"order\" type=\"number\" className=\"input input-bordered\" value={card ? card.order : \"\"} onChange={e => {\r\n                setCard({ ...card, order: e.target.value });\r\n            }} />\r\n        </FormControl>\r\n        <FormControl label=\"Section\">\r\n            <select name=\"sectionId\" className=\"select select-bordered w-full\" value={card ? card.sectionId : \"\"} onChange={e => {\r\n                setCard({ ...card, sectionId: e.target.value });\r\n            }}>\r\n                {\r\n                    sections?.map((s, i) => <option key={i} value={s.id}>{s.title}</option>)\r\n                }\r\n            </select>\r\n        </FormControl>\r\n    </AdminTable>);\r\n}"],"names":["FilterComponent","_ref","filterText","onFilter","onClear","_jsx","_Fragment","children","_jsxs","className","placeholder","id","type","value","onChange","onClick","MyDataTable","props","_props$data","_React$useState","React","_React$useState2","_slicedToArray","setFilterText","_React$useState3","_React$useState4","resetPaginationToggle","setResetPaginationToggle","filteredItems","data","filter","item","columns","some","c","val","selector","toString","toLowerCase","includes","subHeaderComponentMemo","e","target","DataTable","title","pagination","paginationResetDefaultPage","subHeader","subHeaderComponent","persistTableHead","theme","onColumnOrderChange","cols","console","log","AdminTable","model","setModel","models","setModels","sort","defaultModel","userContext","UserContext","error","setError","success","setSuccess","CREATE","_React$useState5","_React$useState6","state","setState","reset","preventDefault","document","querySelector","querySelectorAll","forEach","b","disabled","handleDelete","window","confirm","api","delete","concat","apiPath","then","res","status","startsWith","m","JSON","stringify","catch","err","message","handleEdit","find","s","isAdmin","get","setFp","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fp","_yield$fp$get","visitorId","wrap","_context","prev","next","FingerprintJS","sent","params","fingerPrint","stop","apply","arguments","_toConsumableArray","name","cell","row","handleCreate","post","map","finally","Alert","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","FormControl","label","CardsTable","card","setCard","cards","setCards","sections","setSections","a","_a$section","_b$section","_a$section2","_b$section2","section","order","_c$section","_objectSpread","sectionId","i"],"sourceRoot":""}